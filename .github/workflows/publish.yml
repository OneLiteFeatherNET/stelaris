name: CI

on:
  push:
    branches:
      - feature/migration
    tags:
      - '*'
  workflow_dispatch:

jobs:
  flutter:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        name: Checkout
      - name: Set Up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.2'
          channel: 'stable'
      - name: Install Dependencies
        run: flutter pub get
      - name: Run pub runn build_runner build
        run: flutter pub run build_runner build --delete-conflicting-outputs
      - name: Build Web
        run: flutter build web --release
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: build/web

  docker:
    runs-on: ubuntu-latest
    needs:
      - flutter
    steps:
      - uses: actions/checkout@v4
        name: Checkout
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-web
          path: build/web
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          # list of Docker images to use as base name for tags
          images: |
            stelaris/stelaris-ui
            ${{ secrets.HARBOR_REGISTRY }}/stelaris/stelaris-ui
          # generate Docker tags based on the following events/attributes
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
      - name: Log in to OneLiteFeather Harbor
#        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.HARBOR_USERNAME }}
          password: ${{ secrets.HARBOR_PASSWORD }}
          registry: ${{ secrets.HARBOR_REGISTRY }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
